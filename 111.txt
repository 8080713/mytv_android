Run ./gradlew :tv:assembleRelease
Downloading https://mirrors.cloud.tencent.com/gradle/gradle-8.11.1-bin.zip
.............10%.............20%.............30%.............40%.............50%.............60%.............70%.............80%.............90%.............100%

Welcome to Gradle 8.11.1!

Here are the highlights of this release:
 - Parallel load and store for Configuration Cache
 - Java compilation errors at the end of the build output
 - Consolidated report for warnings and deprecations

For more details see https://docs.gradle.org/8.11.1/release-notes.html

Starting a Gradle Daemon (subsequent builds will be faster)
Configuration on demand is an incubating feature.

> Configure project :tv
WARNING: The option setting 'android.disableResourceValidation=true' is experimental.
The current default is 'false'.
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:100:47: Unexpected tokens (use ';' to separate expressions on the same line)
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:101:48: Unexpected tokens (use ';' to separate expressions on the same line)
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:24:5: Unresolved reference: namespace
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:25:5: Unresolved reference: compileSdk
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:27:5: Unresolved reference: defaultConfig
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:28:9: Unresolved reference: applicationId
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:29:9: Unresolved reference: minSdk
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:30:9: Unresolved reference: targetSdk
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:31:9: Unresolved reference: versionCode
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:32:9: Unresolved reference: versionName
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:33:9: Unresolved reference: vectorDrawables
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:34:13: Unresolved reference: useSupportLibrary
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:39:5: Unresolved reference: buildTypes
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:40:9: Expression 'release' cannot be invoked as a function. The function 'invoke()' is not found
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:40:9: Unresolved reference. None of the following candidates is applicable because of receiver type mismatch: 
public val NamedDomainObjectContainer<KotlinSourceSet>.release: NamedDomainObjectProvider<KotlinSourceSet> defined in org.gradle.kotlin.dsl
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:41:13: Unresolved reference: isMinifyEnabled
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:42:13: Unresolved reference: isShrinkResources
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:43:13: Unresolved reference: proguardFiles
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:44:17: Unresolved reference: getDefaultProguardFile
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:47:13: Unresolved reference: signingConfig
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:47:29: Unresolved reference: signingConfigs
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:49:9: Unresolved reference. None of the following candidates is applicable because of receiver type mismatch: 
public inline fun CompileOptions.debug(vararg debugArgs: Pair<String, Any?>): CompileOptions defined in org.gradle.kotlin.dsl
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:50:13: Unresolved reference: isMinifyEnabled
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:51:13: Unresolved reference: proguardFiles
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:52:17: Unresolved reference: getDefaultProguardFile
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:55:13: Unresolved reference: signingConfig
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:55:29: Unresolved reference: signingConfigs
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:58:5: Unresolved reference: splits
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:59:9: Unresolved reference: abi
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:60:13: Unresolved reference: isEnable
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:61:13: Unresolved reference: reset
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:62:13: Unresolved reference: include
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:63:13: Unresolved reference: isUniversalApk
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:67:5: Unresolved reference: compileOptions
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:68:9: Unresolved reference: isCoreLibraryDesugaringEnabled
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:69:9: Unresolved reference: sourceCompatibility
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:70:9: Unresolved reference: targetCompatibility
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:73:5: Unresolved reference. None of the following candidates is applicable because of receiver type mismatch: 
public fun BaseAppModuleExtension.kotlinOptions(configure: Action<KotlinJvmOptions>): Unit defined in org.gradle.kotlin.dsl
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:77:5: Unresolved reference: buildFeatures
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:78:9: Unresolved reference: compose
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:79:9: Unresolved reference: buildConfig
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:82:5: Unresolved reference: packaging
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:83:9: Unresolved reference. None of the following candidates is applicable because of receiver type mismatch: 
public inline operator fun <T : Any, C : NamedDomainObjectContainer<TypeVariable(T)>> TypeVariable(C).invoke(configuration: Action<NamedDomainObjectContainerScope<TypeVariable(T)>>): TypeVariable(C) defined in org.gradle.kotlin.dsl
public operator fun <T> Closure<TypeVariable(T)>.invoke(): TypeVariable(T) defined in org.gradle.kotlin.dsl
public operator fun <T> Closure<TypeVariable(T)>.invoke(x: Any?): TypeVariable(T) defined in org.gradle.kotlin.dsl
public operator fun <T> Closure<TypeVariable(T)>.invoke(vararg xs: Any?): TypeVariable(T) defined in org.gradle.kotlin.dsl
public operator fun <V> Callable<TypeVariable(V)>.invoke(): TypeVariable(V) defined in org.gradle.kotlin.dsl
public operator fun <T, R> DeepRecursiveFunction<TypeVariable(T), TypeVariable(R)>.invoke(value: TypeVariable(T)): TypeVariable(R) defined in kotlin
public operator fun <T> Action<in TypeVariable(T)>.invoke(target: TypeVariable(T)): Unit defined in org.gradle.kotlin.dsl
public operator fun <T> NamedDomainObjectProvider<TypeVariable(T)>.invoke(action: TypeVariable(T).() -> Unit): Unit defined in org.gradle.kotlin.dsl
public inline operator fun ConfigurationContainer.invoke(configuration: Action<ConfigurationContainerScope>): ConfigurationContainer defined in org.gradle.kotlin.dsl
public operator fun ArtifactHandler.invoke(configuration: ArtifactHandlerScope.() -> Unit): Unit defined in org.gradle.kotlin.dsl
public operator fun <D : Dependency> DependencyCollector.invoke(dependency: TypeVariable(D), configuration: Action<in TypeVariable(D)>): Unit defined in org.gradle.kotlin.dsl
public operator fun DependencyCollector.invoke(dependencyNotation: CharSequence): Unit defined in org.gradle.kotlin.dsl
public operator fun DependencyCollector.invoke(dependencyNotation: CharSequence, configuration: Action<in ExternalModuleDependency>): Unit defined in org.gradle.kotlin.dsl
public operator fun DependencyCollector.invoke(dependency: Dependency): Unit defined in org.gradle.kotlin.dsl
public operator fun DependencyCollector.invoke(dependencyConstraint: DependencyConstraint): Unit defined in org.gradle.kotlin.dsl
public operator fun DependencyCollector.invoke(dependencyConstraint: DependencyConstraint, configuration: Action<in DependencyConstraint>): Unit defined in org.gradle.kotlin.dsl
public operator fun DependencyCollector.invoke(files: FileCollection): Unit defined in org.gradle.kotlin.dsl
public operator fun DependencyCollector.invoke(files: FileCollection, configuration: Action<in FileCollectionDependency>): Unit defined in org.gradle.kotlin.dsl
public operator fun <D : Dependency> DependencyCollector.invoke(dependency: Provider<out TypeVariable(D)>, configuration: Action<in TypeVariable(D)>): Unit defined in org.gradle.kotlin.dsl
public operator fun DependencyCollector.invoke(dependency: Provider<out Dependency>): Unit defined in org.gradle.kotlin.dsl
public operator fun DependencyCollector.invoke(dependencyConstraint: Provider<out DependencyConstraint>): Unit defined in org.gradle.kotlin.dsl
public operator fun DependencyCollector.invoke(dependencyConstraint: Provider<out DependencyConstraint>, configuration: Action<in DependencyConstraint>): Unit defined in org.gradle.kotlin.dsl
public operator fun DependencyCollector.invoke(externalModule: ProviderConvertible<out MinimalExternalModuleDependency>): Unit defined in org.gradle.kotlin.dsl
public operator fun DependencyCollector.invoke(externalModule: ProviderConvertible<out MinimalExternalModuleDependency>, configuration: Action<in ExternalModuleDependency>): Unit defined in org.gradle.kotlin.dsl
public operator fun DependencyConstraintHandler.invoke(configuration: DependencyConstraintHandlerScope.() -> Unit): Unit defined in org.gradle.kotlin.dsl
public operator fun <D : ModuleDependency> DependencyModifier.invoke(dependency: TypeVariable(D)): TypeVariable(D) defined in org.gradle.kotlin.dsl
public operator fun DependencyModifier.invoke(dependencyNotation: CharSequence): ExternalModuleDependency defined in org.gradle.kotlin.dsl
public operator fun DependencyModifier.invoke(dependency: Provider<out ModuleDependency>): Provider<out ModuleDependency> defined in org.gradle.kotlin.dsl
public operator fun DependencyModifier.invoke(dependency: ProviderConvertible<out MinimalExternalModuleDependency>): Provider<out MinimalExternalModuleDependency> defined in org.gradle.kotlin.dsl
public inline operator fun <T> ExtraPropertiesExtension.invoke(initialValueProvider: () -> TypeVariable(T)): InitialValueExtraPropertyDelegateProvider<TypeVariable(T)> defined in org.gradle.kotlin.dsl
public operator fun <T> ExtraPropertiesExtension.invoke(initialValue: TypeVariable(T)): InitialValueExtraPropertyDelegateProvider<TypeVariable(T)> defined in org.gradle.kotlin.dsl
public operator fun <T> Spec<TypeVariable(T)>.invoke(arg: TypeVariable(T)): Boolean defined in org.gradle.kotlin.dsl
public inline operator fun TaskContainer.invoke(configuration: TaskContainerScope.() -> Unit): TaskContainer defined in org.gradle.kotlin.dsl
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:84:13: Unresolved reference: excludes
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:84:22: Unresolved reference: +=
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:88:5: Unresolved reference: flavorDimensions
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:88:22: Unresolved reference: +=
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:89:5: Unresolved reference: productFlavors
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:90:9: Unresolved reference. None of the following candidates is applicable because of receiver type mismatch: 
public inline fun <U : TypeVariable(T), T : Any> PolymorphicDomainObjectContainer<TypeVariable(T)>.create(name: String, type: KClass<TypeVariable(U)>): TypeVariable(U) defined in org.gradle.kotlin.dsl
public inline fun <U : TypeVariable(T), T : Any> PolymorphicDomainObjectContainer<TypeVariable(T)>.create(name: String, type: KClass<TypeVariable(U)>, configuration: Action<in TypeVariable(U)>): TypeVariable(U) defined in org.gradle.kotlin.dsl
public inline fun <reified U : Any> PolymorphicDomainObjectContainer<in TypeVariable(U)>.create(name: String): TypeVariable(U) defined in org.gradle.kotlin.dsl
public inline fun <reified U : Any> PolymorphicDomainObjectContainer<in TypeVariable(U)>.create(name: String, noinline configuration: TypeVariable(U).() -> Unit): TypeVariable(U) defined in org.gradle.kotlin.dsl
public fun DependencyHandler.create(group: String, name: String, version: String? = ..., configuration: String? = ..., classifier: String? = ..., ext: String? = ...): ExternalModuleDependency defined in org.gradle.kotlin.dsl
public inline fun DependencyHandler.create(dependencyNotation: String, dependencyConfiguration: ExternalModuleDependency.() -> Unit): ExternalModuleDependency defined in org.gradle.kotlin.dsl
public inline fun <reified T : Any> ExtensionContainer.create(name: String, vararg constructionArguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
public inline fun <T : Any> ExtensionContainer.create(name: String, type: KClass<TypeVariable(T)>, vararg constructionArguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
public inline fun <T : Any> ExtensionContainer.create(publicType: KClass<TypeVariable(T)>, name: String, instanceType: KClass<out TypeVariable(T)>, vararg constructionArguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
public inline fun <T : Any> ExtensionContainer.create(publicType: TypeOf<TypeVariable(T)>, name: String, instanceType: KClass<out TypeVariable(T)>, vararg constructionArguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
public inline fun TaskContainer.create(vararg options: Pair<String, Any?>): Task defined in org.gradle.kotlin.dsl
public inline fun <reified T : Task> TaskContainer.create(name: String, vararg arguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
public inline fun <T : Task> TaskContainer.create(name: String, type: KClass<TypeVariable(T)>): TypeVariable(T) defined in org.gradle.kotlin.dsl
public inline fun <T : Task> TaskContainer.create(name: String, type: KClass<TypeVariable(T)>, vararg constructorArgs: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
public inline fun <T : Task> TaskContainer.create(name: String, type: KClass<TypeVariable(T)>, configuration: Action<in TypeVariable(T)>): TypeVariable(T) defined in org.gradle.kotlin.dsl
public inline fun <S : TypeVariable(T), T : Any> ModelMap<TypeVariable(T)>.create(name: String, type: KClass<TypeVariable(S)>): Unit defined in org.gradle.kotlin.dsl
public inline fun <S : TypeVariable(T), T : Any> ModelMap<TypeVariable(T)>.create(name: String, type: KClass<TypeVariable(S)>, configAction: Action<in TypeVariable(S)>): Unit defined in org.gradle.kotlin.dsl
public inline fun <T : Task> BinaryTasksCollection.create(name: String, type: KClass<TypeVariable(T)>, config: Action<in TypeVariable(T)>): Unit defined in org.gradle.kotlin.dsl
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:91:13: Unresolved reference: dimension
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:93:9: Unresolved reference. None of the following candidates is applicable because of receiver type mismatch: 
public inline fun <U : TypeVariable(T), T : Any> PolymorphicDomainObjectContainer<TypeVariable(T)>.create(name: String, type: KClass<TypeVariable(U)>): TypeVariable(U) defined in org.gradle.kotlin.dsl
public inline fun <U : TypeVariable(T), T : Any> PolymorphicDomainObjectContainer<TypeVariable(T)>.create(name: String, type: KClass<TypeVariable(U)>, configuration: Action<in TypeVariable(U)>): TypeVariable(U) defined in org.gradle.kotlin.dsl
public inline fun <reified U : Any> PolymorphicDomainObjectContainer<in TypeVariable(U)>.create(name: String): TypeVariable(U) defined in org.gradle.kotlin.dsl
public inline fun <reified U : Any> PolymorphicDomainObjectContainer<in TypeVariable(U)>.create(name: String, noinline configuration: TypeVariable(U).() -> Unit): TypeVariable(U) defined in org.gradle.kotlin.dsl
public fun DependencyHandler.create(group: String, name: String, version: String? = ..., configuration: String? = ..., classifier: String? = ..., ext: String? = ...): ExternalModuleDependency defined in org.gradle.kotlin.dsl
public inline fun DependencyHandler.create(dependencyNotation: String, dependencyConfiguration: ExternalModuleDependency.() -> Unit): ExternalModuleDependency defined in org.gradle.kotlin.dsl
public inline fun <reified T : Any> ExtensionContainer.create(name: String, vararg constructionArguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
public inline fun <T : Any> ExtensionContainer.create(name: String, type: KClass<TypeVariable(T)>, vararg constructionArguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
public inline fun <T : Any> ExtensionContainer.create(publicType: KClass<TypeVariable(T)>, name: String, instanceType: KClass<out TypeVariable(T)>, vararg constructionArguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
public inline fun <T : Any> ExtensionContainer.create(publicType: TypeOf<TypeVariable(T)>, name: String, instanceType: KClass<out TypeVariable(T)>, vararg constructionArguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
public inline fun TaskContainer.create(vararg options: Pair<String, Any?>): Task defined in org.gradle.kotlin.dsl
public inline fun <reified T : Task> TaskContainer.create(name: String, vararg arguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
public inline fun <T : Task> TaskContainer.create(name: String, type: KClass<TypeVariable(T)>): TypeVariable(T) defined in org.gradle.kotlin.dsl
public inline fun <T : Task> TaskContainer.create(name: String, type: KClass<TypeVariable(T)>, vararg constructorArgs: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
public inline fun <T : Task> TaskContainer.create(name: String, type: KClass<TypeVariable(T)>, configuration: Action<in TypeVariable(T)>): TypeVariable(T) defined in org.gradle.kotlin.dsl
public inline fun <S : TypeVariable(T), T : Any> ModelMap<TypeVariable(T)>.create(name: String, type: KClass<TypeVariable(S)>): Unit defined in org.gradle.kotlin.dsl
public inline fun <S : TypeVariable(T), T : Any> ModelMap<TypeVariable(T)>.create(name: String, type: KClass<TypeVariable(S)>, configAction: Action<in TypeVariable(S)>): Unit defined in org.gradle.kotlin.dsl
public inline fun <T : Task> BinaryTasksCollection.create(name: String, type: KClass<TypeVariable(T)>, config: Action<in TypeVariable(T)>): Unit defined in org.gradle.kotlin.dsl
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:94:13: Unresolved reference: dimension
e: file:///home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts:95:13: Unresolved reference: applicationId

FAILURE: Build failed with an exception.

* Where:
Build file '/home/runner/work/mytv_android/mytv_android/tv/build.gradle.kts' line: 24

* What went wrong:
Script compilation errors:

  Line 024:     namespace = "top.yogiczy.mytv.tv"
                ^ Unresolved reference: namespace

  Line 025:     compileSdk = 34
                ^ Unresolved reference: compileSdk

  Line 027:     defaultConfig {
                ^ Unresolved reference: defaultConfig

  Line 028:         applicationId = "com.github.mytv.android"
                    ^ Unresolved reference: applicationId

  Line 029:         minSdk = 21
                    ^ Unresolved reference: minSdk

  Line 030:         targetSdk = 34
                    ^ Unresolved reference: targetSdk

  Line 031:         versionCode = "${System.getenv("VERSION_CODE")}".toInt()
                    ^ Unresolved reference: versionCode

  Line 032:         versionName = "1.1.1.${System.getenv("VERSION_CODE")}"                                   
                    ^ Unresolved reference: versionName

  Line 033:         vectorDrawables {
                    ^ Unresolved reference: vectorDrawables

  Line 034:             useSupportLibrary = true
                        ^ Unresolved reference: useSupportLibrary

  Line 039:     buildTypes {
                ^ Unresolved reference: buildTypes

  Line 040:         release {
                    ^ Expression 'release' cannot be invoked as a function. The function 'invoke()' is not found

  Line 040:         release {
                    ^ Unresolved reference. None of the following candidates is applicable because of receiver type mismatch: 
                        public val NamedDomainObjectContainer<KotlinSourceSet>.release: NamedDomainObjectProvider<KotlinSourceSet> defined in org.gradle.kotlin.dsl

  Line 041:             isMinifyEnabled = true
                        ^ Unresolved reference: isMinifyEnabled

  Line 042:             isShrinkResources = true
                        ^ Unresolved reference: isShrinkResources

  Line 043:             proguardFiles(
                        ^ Unresolved reference: proguardFiles

  Line 044:                 getDefaultProguardFile("proguard-android-optimize.txt"),
                            ^ Unresolved reference: getDefaultProguardFile

  Line 047:             signingConfig = signingConfigs.getByName("release")
                        ^ Unresolved reference: signingConfig

  Line 047:             signingConfig = signingConfigs.getByName("release")
                                        ^ Unresolved reference: signingConfigs

  Line 049:         debug{
                    ^ Unresolved reference. None of the following candidates is applicable because of receiver type mismatch: 
                        public inline fun CompileOptions.debug(vararg debugArgs: Pair<String, Any?>): CompileOptions defined in org.gradle.kotlin.dsl

  Line 050:             isMinifyEnabled = false
                        ^ Unresolved reference: isMinifyEnabled

  Line 051:             proguardFiles(
                        ^ Unresolved reference: proguardFiles

  Line 052:                 getDefaultProguardFile("proguard-android-optimize.txt"),
                            ^ Unresolved reference: getDefaultProguardFile

  Line 055:             signingConfig = signingConfigs.getByName("release")
                        ^ Unresolved reference: signingConfig

  Line 055:             signingConfig = signingConfigs.getByName("release")
                                        ^ Unresolved reference: signingConfigs

  Line 058:     splits {
                ^ Unresolved reference: splits

  Line 059:         abi {
                    ^ Unresolved reference: abi

  Line 060:             isEnable = true
                        ^ Unresolved reference: isEnable

  Line 061:             reset()
                        ^ Unresolved reference: reset

  Line 062:             include("armeabi-v7a", "arm64-v8a", "x86", "x86_64")
                        ^ Unresolved reference: include

  Line 063:             isUniversalApk = true
                        ^ Unresolved reference: isUniversalApk

  Line 067:     compileOptions {
                ^ Unresolved reference: compileOptions

  Line 068:         isCoreLibraryDesugaringEnabled = true
                    ^ Unresolved reference: isCoreLibraryDesugaringEnabled

  Line 069:         sourceCompatibility = JavaVersion.VERSION_11
                    ^ Unresolved reference: sourceCompatibility

  Line 070:         targetCompatibility = JavaVersion.VERSION_11
                    ^ Unresolved reference: targetCompatibility

  Line 073:     kotlinOptions {
                ^ Unresolved reference. None of the following candidates is applicable because of receiver type mismatch: 
                    public fun BaseAppModuleExtension.kotlinOptions(configure: Action<KotlinJvmOptions>): Unit defined in org.gradle.kotlin.dsl

  Line 077:     buildFeatures {
                ^ Unresolved reference: buildFeatures

  Line 078:         compose = true
                    ^ Unresolved reference: compose

  Line 079:         buildConfig = true
                    ^ Unresolved reference: buildConfig

  Line 082:     packaging {
                ^ Unresolved reference: packaging

  Line 083:         resources {
                    ^ Unresolved reference. None of the following candidates is applicable because of receiver type mismatch: 
                        public inline operator fun <T : Any, C : NamedDomainObjectContainer<TypeVariable(T)>> TypeVariable(C).invoke(configuration: Action<NamedDomainObjectContainerScope<TypeVariable(T)>>): TypeVariable(C) defined in org.gradle.kotlin.dsl
                        public operator fun <T> Closure<TypeVariable(T)>.invoke(): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public operator fun <T> Closure<TypeVariable(T)>.invoke(x: Any?): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public operator fun <T> Closure<TypeVariable(T)>.invoke(vararg xs: Any?): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public operator fun <V> Callable<TypeVariable(V)>.invoke(): TypeVariable(V) defined in org.gradle.kotlin.dsl
                        public operator fun <T, R> DeepRecursiveFunction<TypeVariable(T), TypeVariable(R)>.invoke(value: TypeVariable(T)): TypeVariable(R) defined in kotlin
                        public operator fun <T> Action<in TypeVariable(T)>.invoke(target: TypeVariable(T)): Unit defined in org.gradle.kotlin.dsl
                        public operator fun <T> NamedDomainObjectProvider<TypeVariable(T)>.invoke(action: TypeVariable(T).() -> Unit): Unit defined in org.gradle.kotlin.dsl
                        public inline operator fun ConfigurationContainer.invoke(configuration: Action<ConfigurationContainerScope>): ConfigurationContainer defined in org.gradle.kotlin.dsl
                        public operator fun ArtifactHandler.invoke(configuration: ArtifactHandlerScope.() -> Unit): Unit defined in org.gradle.kotlin.dsl
                        public operator fun <D : Dependency> DependencyCollector.invoke(dependency: TypeVariable(D), configuration: Action<in TypeVariable(D)>): Unit defined in org.gradle.kotlin.dsl
                        public operator fun DependencyCollector.invoke(dependencyNotation: CharSequence): Unit defined in org.gradle.kotlin.dsl
                        public operator fun DependencyCollector.invoke(dependencyNotation: CharSequence, configuration: Action<in ExternalModuleDependency>): Unit defined in org.gradle.kotlin.dsl
                        public operator fun DependencyCollector.invoke(dependency: Dependency): Unit defined in org.gradle.kotlin.dsl
                        public operator fun DependencyCollector.invoke(dependencyConstraint: DependencyConstraint): Unit defined in org.gradle.kotlin.dsl
                        public operator fun DependencyCollector.invoke(dependencyConstraint: DependencyConstraint, configuration: Action<in DependencyConstraint>): Unit defined in org.gradle.kotlin.dsl
                        public operator fun DependencyCollector.invoke(files: FileCollection): Unit defined in org.gradle.kotlin.dsl
                        public operator fun DependencyCollector.invoke(files: FileCollection, configuration: Action<in FileCollectionDependency>): Unit defined in org.gradle.kotlin.dsl
                        public operator fun <D : Dependency> DependencyCollector.invoke(dependency: Provider<out TypeVariable(D)>, configuration: Action<in TypeVariable(D)>): Unit defined in org.gradle.kotlin.dsl
                        public operator fun DependencyCollector.invoke(dependency: Provider<out Dependency>): Unit defined in org.gradle.kotlin.dsl
                        public operator fun DependencyCollector.invoke(dependencyConstraint: Provider<out DependencyConstraint>): Unit defined in org.gradle.kotlin.dsl
                        public operator fun DependencyCollector.invoke(dependencyConstraint: Provider<out DependencyConstraint>, configuration: Action<in DependencyConstraint>): Unit defined in org.gradle.kotlin.dsl
                        public operator fun DependencyCollector.invoke(externalModule: ProviderConvertible<out MinimalExternalModuleDependency>): Unit defined in org.gradle.kotlin.dsl
                        public operator fun DependencyCollector.invoke(externalModule: ProviderConvertible<out MinimalExternalModuleDependency>, configuration: Action<in ExternalModuleDependency>): Unit defined in org.gradle.kotlin.dsl
                        public operator fun DependencyConstraintHandler.invoke(configuration: DependencyConstraintHandlerScope.() -> Unit): Unit defined in org.gradle.kotlin.dsl
                        public operator fun <D : ModuleDependency> DependencyModifier.invoke(dependency: TypeVariable(D)): TypeVariable(D) defined in org.gradle.kotlin.dsl
                        public operator fun DependencyModifier.invoke(dependencyNotation: CharSequence): ExternalModuleDependency defined in org.gradle.kotlin.dsl
                        public operator fun DependencyModifier.invoke(dependency: Provider<out ModuleDependency>): Provider<out ModuleDependency> defined in org.gradle.kotlin.dsl
                        public operator fun DependencyModifier.invoke(dependency: ProviderConvertible<out MinimalExternalModuleDependency>): Provider<out MinimalExternalModuleDependency> defined in org.gradle.kotlin.dsl
                        public inline operator fun <T> ExtraPropertiesExtension.invoke(initialValueProvider: () -> TypeVariable(T)): InitialValueExtraPropertyDelegateProvider<TypeVariable(T)> defined in org.gradle.kotlin.dsl
                        public operator fun <T> ExtraPropertiesExtension.invoke(initialValue: TypeVariable(T)): InitialValueExtraPropertyDelegateProvider<TypeVariable(T)> defined in org.gradle.kotlin.dsl
                        public operator fun <T> Spec<TypeVariable(T)>.invoke(arg: TypeVariable(T)): Boolean defined in org.gradle.kotlin.dsl
                        public inline operator fun TaskContainer.invoke(configuration: TaskContainerScope.() -> Unit): TaskContainer defined in org.gradle.kotlin.dsl

  Line 084:             excludes += "/META-INF/{AL2.0,LGPL2.1}"
                        ^ Unresolved reference: excludes

  Line 084:             excludes += "/META-INF/{AL2.0,LGPL2.1}"
                                 ^ Unresolved reference: +=

  Line 088:     flavorDimensions += listOf("version")
                ^ Unresolved reference: flavorDimensions

  Line 088:     flavorDimensions += listOf("version")
                                 ^ Unresolved reference: +=

  Line 089:     productFlavors {
                ^ Unresolved reference: productFlavors

  Line 090:         create("original") {
                    ^ Unresolved reference. None of the following candidates is applicable because of receiver type mismatch: 
                        public inline fun <U : TypeVariable(T), T : Any> PolymorphicDomainObjectContainer<TypeVariable(T)>.create(name: String, type: KClass<TypeVariable(U)>): TypeVariable(U) defined in org.gradle.kotlin.dsl
                        public inline fun <U : TypeVariable(T), T : Any> PolymorphicDomainObjectContainer<TypeVariable(T)>.create(name: String, type: KClass<TypeVariable(U)>, configuration: Action<in TypeVariable(U)>): TypeVariable(U) defined in org.gradle.kotlin.dsl
                        public inline fun <reified U : Any> PolymorphicDomainObjectContainer<in TypeVariable(U)>.create(name: String): TypeVariable(U) defined in org.gradle.kotlin.dsl
                        public inline fun <reified U : Any> PolymorphicDomainObjectContainer<in TypeVariable(U)>.create(name: String, noinline configuration: TypeVariable(U).() -> Unit): TypeVariable(U) defined in org.gradle.kotlin.dsl
                        public fun DependencyHandler.create(group: String, name: String, version: String? = ..., configuration: String? = ..., classifier: String? = ..., ext: String? = ...): ExternalModuleDependency defined in org.gradle.kotlin.dsl
                        public inline fun DependencyHandler.create(dependencyNotation: String, dependencyConfiguration: ExternalModuleDependency.() -> Unit): ExternalModuleDependency defined in org.gradle.kotlin.dsl
                        public inline fun <reified T : Any> ExtensionContainer.create(name: String, vararg constructionArguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public inline fun <T : Any> ExtensionContainer.create(name: String, type: KClass<TypeVariable(T)>, vararg constructionArguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public inline fun <T : Any> ExtensionContainer.create(publicType: KClass<TypeVariable(T)>, name: String, instanceType: KClass<out TypeVariable(T)>, vararg constructionArguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public inline fun <T : Any> ExtensionContainer.create(publicType: TypeOf<TypeVariable(T)>, name: String, instanceType: KClass<out TypeVariable(T)>, vararg constructionArguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public inline fun TaskContainer.create(vararg options: Pair<String, Any?>): Task defined in org.gradle.kotlin.dsl
                        public inline fun <reified T : Task> TaskContainer.create(name: String, vararg arguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public inline fun <T : Task> TaskContainer.create(name: String, type: KClass<TypeVariable(T)>): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public inline fun <T : Task> TaskContainer.create(name: String, type: KClass<TypeVariable(T)>, vararg constructorArgs: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public inline fun <T : Task> TaskContainer.create(name: String, type: KClass<TypeVariable(T)>, configuration: Action<in TypeVariable(T)>): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public inline fun <S : TypeVariable(T), T : Any> ModelMap<TypeVariable(T)>.create(name: String, type: KClass<TypeVariable(S)>): Unit defined in org.gradle.kotlin.dsl
                        public inline fun <S : TypeVariable(T), T : Any> ModelMap<TypeVariable(T)>.create(name: String, type: KClass<TypeVariable(S)>, configAction: Action<in TypeVariable(S)>): Unit defined in org.gradle.kotlin.dsl
                        public inline fun <T : Task> BinaryTasksCollection.create(name: String, type: KClass<TypeVariable(T)>, config: Action<in TypeVariable(T)>): Unit defined in org.gradle.kotlin.dsl

  Line 091:             dimension = "version"
                        ^ Unresolved reference: dimension

  Line 093:         create("disguised") {
                    ^ Unresolved reference. None of the following candidates is applicable because of receiver type mismatch: 
                        public inline fun <U : TypeVariable(T), T : Any> PolymorphicDomainObjectContainer<TypeVariable(T)>.create(name: String, type: KClass<TypeVariable(U)>): TypeVariable(U) defined in org.gradle.kotlin.dsl
                        public inline fun <U : TypeVariable(T), T : Any> PolymorphicDomainObjectContainer<TypeVariable(T)>.create(name: String, type: KClass<TypeVariable(U)>, configuration: Action<in TypeVariable(U)>): TypeVariable(U) defined in org.gradle.kotlin.dsl
                        public inline fun <reified U : Any> PolymorphicDomainObjectContainer<in TypeVariable(U)>.create(name: String): TypeVariable(U) defined in org.gradle.kotlin.dsl
                        public inline fun <reified U : Any> PolymorphicDomainObjectContainer<in TypeVariable(U)>.create(name: String, noinline configuration: TypeVariable(U).() -> Unit): TypeVariable(U) defined in org.gradle.kotlin.dsl
                        public fun DependencyHandler.create(group: String, name: String, version: String? = ..., configuration: String? = ..., classifier: String? = ..., ext: String? = ...): ExternalModuleDependency defined in org.gradle.kotlin.dsl
                        public inline fun DependencyHandler.create(dependencyNotation: String, dependencyConfiguration: ExternalModuleDependency.() -> Unit): ExternalModuleDependency defined in org.gradle.kotlin.dsl
                        public inline fun <reified T : Any> ExtensionContainer.create(name: String, vararg constructionArguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public inline fun <T : Any> ExtensionContainer.create(name: String, type: KClass<TypeVariable(T)>, vararg constructionArguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public inline fun <T : Any> ExtensionContainer.create(publicType: KClass<TypeVariable(T)>, name: String, instanceType: KClass<out TypeVariable(T)>, vararg constructionArguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public inline fun <T : Any> ExtensionContainer.create(publicType: TypeOf<TypeVariable(T)>, name: String, instanceType: KClass<out TypeVariable(T)>, vararg constructionArguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public inline fun TaskContainer.create(vararg options: Pair<String, Any?>): Task defined in org.gradle.kotlin.dsl
                        public inline fun <reified T : Task> TaskContainer.create(name: String, vararg arguments: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public inline fun <T : Task> TaskContainer.create(name: String, type: KClass<TypeVariable(T)>): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public inline fun <T : Task> TaskContainer.create(name: String, type: KClass<TypeVariable(T)>, vararg constructorArgs: Any): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public inline fun <T : Task> TaskContainer.create(name: String, type: KClass<TypeVariable(T)>, configuration: Action<in TypeVariable(T)>): TypeVariable(T) defined in org.gradle.kotlin.dsl
                        public inline fun <S : TypeVariable(T), T : Any> ModelMap<TypeVariable(T)>.create(name: String, type: KClass<TypeVariable(S)>): Unit defined in org.gradle.kotlin.dsl
                        public inline fun <S : TypeVariable(T), T : Any> ModelMap<TypeVariable(T)>.create(name: String, type: KClass<TypeVariable(S)>, configAction: Action<in TypeVariable(S)>): Unit defined in org.gradle.kotlin.dsl
                        public inline fun <T : Task> BinaryTasksCollection.create(name: String, type: KClass<TypeVariable(T)>, config: Action<in TypeVariable(T)>): Unit defined in org.gradle.kotlin.dsl

  Line 094:             dimension = "version"
                        ^ Unresolved reference: dimension

  Line 095:             applicationId = "com.chinablue.tv"
                        ^ Unresolved reference: applicationId

  Line 100:         implementation(libs.androidx.core.ktx),
                                                          ^ Unexpected tokens (use ';' to separate expressions on the same line)

  Line 101:         implementation(libs.androidx.appcompat),
                                                           ^ Unexpected tokens (use ';' to separate expressions on the same line)

53 errors

* Try:
> Run with --stacktrace option to get the stack trace.
> Run with --info or --debug option to get more log output.
> Run with --scan to get full insights.
> Get more help at https://help.gradle.org.

BUILD FAILED in 1m 35s
Error: Process completed with exit code 1.